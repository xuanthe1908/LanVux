services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: e-learning-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-e_learning}
      PGDATA: /data/postgres
    volumes:
      - postgres_data:/data/postgres
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - e-learning-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: e-learning-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - e-learning-network
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: e-learning-backend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${BACKEND_PORT:-4000}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-e_learning}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis}@redis:6379
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-1d}
      OPENAI_API_KEY: ${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}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - e-learning-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped

  # Frontend Client
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: e-learning-frontend
    environment:
      VITE_API_URL: ${API_URL:-http://localhost:4000/api}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - e-learning-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

networks:
  e-learning-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: